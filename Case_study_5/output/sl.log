NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

810  
811  
812  /*Creating macros for convience directory changes*/
813  %let output =D:\KiTel_CS\Case_study_6\output;
814  %let RawData=D:\KiTel_CS\Case_study_6\RawData ;
815  /*Creating permanent library*/
816  
817  libname output "&output" ;
NOTE: Libref OUTPUT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: D:\KiTel_CS\Case_study_6\output
818  
819  /*Importing rawdata xls and csv files into SAS datasets*/
820  proc import datafile="&RawData\SL.xls"
821      out=SL_Raw
822      dbms=xls replace;
823      range="Sheet1$A4:Z";
824      getnames=yes;
825  run;

NOTE: One or more variables were converted because the data type is not supported by the V9 engine. 
      For more details, run with options MSGLEVEL=I.
NOTE: The import data set has 26 observations and 9 variables.
NOTE: WORK.SL_RAW data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

826  
827  proc sql;
828      create table Sl_le as
829      select *
830      from SL_Raw(drop=I);
NOTE: Table WORK.SL_LE created, with 26 rows and 8 columns.

830!                           * Replace <variable_name> with the actual name of the variable you want
830!  to drop;
831  quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

832  
833  proc import datafile="&RawData\Base.csv"
834      out=base
835      dbms=csv replace;
836      getnames=yes;  * Assumes the first row contains column names;
837  run;

838   /**********************************************************************
839   *   PRODUCT:   SAS
840   *   VERSION:   9.4
841   *   CREATOR:   External File Interface
842   *   DATE:      21SEP24
843   *   DESC:      Generated SAS Datastep Code
844   *   TEMPLATE SOURCE:  (None Specified.)
845   ***********************************************************************/
846      data WORK.BASE    ;
847      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
848      infile 'D:\KiTel_CS\Case_study_6\RawData\Base.csv' delimiter = ',' MISSOVER DSD lrecl=32767
848! firstobs=2 ;
849         informat Name $7. ;
850         informat Height best32. ;
851         informat subject best32. ;
852         informat site best32. ;
853         format Name $7. ;
854         format Height best12. ;
855         format subject best12. ;
856         format site best12. ;
857      input
858                  Name  $
859                  Height
860                  subject
861                  site
862      ;
863      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
864      run;

NOTE: The infile 'D:\KiTel_CS\Case_study_6\RawData\Base.csv' is:
      Filename=D:\KiTel_CS\Case_study_6\RawData\Base.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=349,
      Last Modified=23 August 2024 10:15:24,
      Create Time=07 September 2024 17:50:41

NOTE: 20 records were read from the infile 'D:\KiTel_CS\Case_study_6\RawData\Base.csv'.
      The minimum record length was 11.
      The maximum record length was 16.
NOTE: The data set WORK.BASE has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20 rows created in WORK.BASE from D:\KiTel_CS\Case_study_6\RawData\Base.csv.
  
  
  
NOTE: WORK.BASE data set was successfully created.
NOTE: The data set WORK.BASE has 20 observations and 4 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.03 seconds
      

865  
866  
867  /*Merging of dataset*/
868  proc sort data=base out=base_sort;
869  by subject site;
870  run;

NOTE: There were 20 observations read from the data set WORK.BASE.
NOTE: The data set WORK.BASE_SORT has 20 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

871  
872  proc sort data=sl_le out=SL_sort;
873  by subjectid site;
874  run;

NOTE: There were 26 observations read from the data set WORK.SL_LE.
NOTE: The data set WORK.SL_SORT has 26 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

875  
876  
877  
878  data merges;
879  merge base_sort(in=a) SL_sort(in=b rename=(subjectid=subject));
880  by subject site;
881  if a;
882  run;

NOTE: There were 20 observations read from the data set WORK.BASE_SORT.
NOTE: There were 26 observations read from the data set WORK.SL_SORT.
NOTE: The data set WORK.MERGES has 24 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

883  
884  
885  /*----------------------------------------Task1-------------------------------------*/
886  
887  
888  /*Remove duplicate subject from data if site also same and store duplicate patient data*/
889  proc sort data=merges out=merges_sort nodupkey dupout=output.SL_dup;
890  by subject site;
891  run;

NOTE: There were 24 observations read from the data set WORK.MERGES.
NOTE: 5 observations with duplicate key values were deleted.
NOTE: The data set WORK.MERGES_SORT has 19 observations and 10 variables.
NOTE: The data set OUTPUT.SL_DUP has 5 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

892  
893  
894  data task2;
895  set merges_sort;
896  /*for startdate*/
897  /*for date missing when month bw jan to jun consider 01*/
898  if scan(startdate,1,':') eq "unk" and scan(startdate,2,':') in('01','02','03','04','05','06')
898! then do;
899  substr(startdate,1,3)='01';
900  end;
901  /*for date missing when month bw July to Dec consider 30*/
902  else if scan(startdate,1,':') eq "unk" and scan(startdate,2,':')
902! in('07','08','09','10','11','12') then do;
903  substr(startdate,1,3)='30';
904  end;
905  
906  /*If Month missing considers it as 01 when date in between 1 to 15*/
907  if scan(startdate,2,':')eq "unk" and
907! scan(startdate,1,':')in('01','02','03','04','05','06','07','08','09','10','11','12','13','14','15
907! ') then do;
908  substr(startdate,4,3)='01';
909  end;
910  /*If Month missing considers it as 12 when date in between 16 to 31*/
911  else if scan(startdate,2,':') eq "unk" and scan(startdate,1,':') in
911! ('16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31') then do;
912  substr(startdate,4,3)='12';
913  end;
914  
915  /*for null in time*/
916  if index(startdate,"null") ne 0 then do;  /*fun replaces "null" with "00" in the time part of the
916!  startdat*/
917  startdate=tranwrd(startdate,"null","00");
918  end;
919  
920  
921  /*for both date and month are unk replace 01*/
922  if scan(startdate,1,':') eq "unk" and scan(startdate,2,':') eq "unk" then do;
923  substr(startdate,1,3)="01";
924  substr(startdate,5,3)="01";
925  end;
926  
927  
928  /*for birthdate*/
929  /*for  date missing when month bw jan to jun consider 01*/
930  if scan(birthdate,1,'/') eq "unk" and scan(birthdate,2,'/') in('4','01','02','03','04','05','06')
930!  then do;
931  substr(birthdate,1,3)='01';
932  end;
933  /*for date missing when month bw July to Dec consider 30*/
934  else if scan(birthdate,1,'/') eq "unk" and scan(birthdate,2,'/')
934! in('07','08','09','10','11','12') then do;
935  substr(birthdate,1,3)='30';
936  end;
937  
938  /*for month*/
939  if scan(birthdate,2,'/')eq "unk" and
939! scan(birthdate,1,'/')in('01','02','03','04','05','06','07','08','09','10','11','12','13','14','15
939! ') then do;
940  substr(birthdate,5,3)='01';
941  end;
942  else if scan(birthdate,2,'/') eq "unk" and scan(birthdate,1,'/') in
942! ('16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31') then do;
943  substr(birthdate,5,3)='12';
944  end;
945  else if scan(birthdate,2,'/') eq "unk" and scan(birthdate,1,'/') in('1','4') then do;
946  substr(birthdate,3,3)='01';
947  end;
948  startdate=compress(startdate);
949  run;

NOTE: There were 19 observations read from the data set WORK.MERGES_SORT.
NOTE: The data set WORK.TASK2 has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

950  
951  
952  /*--------------------44444
952! date9.--------------------Task3-------------------------------------*/
953  
954  
955  data task3;
956      set task2;
957  
958  start_date=datepart(input(startdate,anydtdtm.));
959  end_date=datepart(input(enddate,anydtdtm.));
960  
961  
962  /*birth_date=input(compress(birthdate),mmddyy10.);*/
963  
964  /* Clean birthdate variable */
965      birthdate = compress(birthdate);
966  
967      /* Initialize birth_date to missing */
968      birth_date = .;
969  
970      /* Determine format and convert birthdate */
971      if index(birthdate, '/') then do;
972          /* Format is MM/DD/YYYY */
973          birth_date= input(birthdate, mmddyy10.);
974      end;
975      else if length(birthdate) in (5, 6) then do;
976          /* Numeric SAS date format */
977          /* Assuming format "22006" is the number of days since 01JAN1960 */
978          birth_date = input(birthdate, 5.);
979      end;
980      else do;
981          /* Invalid format */
982          birth_date = .;
983      end;
984  
985  format start_date birth_date end_date date9.;
986  
987  
988  if start_date ne . and birth_date ne . then
989  age=intck('year',birth_date,start_date) ;
990  
991  /*Calculating Days, Months and Years*/
992  if start_date ne . and end_date ne . then do;
993  days=intck('day',start_date,end_date);
994  months=intck('month',start_date,end_date);
995  years=intck('year',start_date,end_date);
996  end;
997  
998  
999  /*Round the weight variable with 1 decimal value*/
1000  /* Remove "kg" and any other non-numeric characters */
1001  wt = compress(wt, "kg");
1002  /* Convert the cleaned weight to numeric */
1003  wt_num = input(wt, ?? 8.2); /* Use ?? to avoid errors from invalid input */
1004  /* Round the numeric weight to one decimal place */
1005  if wt_num ne . then wt_num = round(wt_num, 0.1);
1006  
1007  /*Labelling Day,Month, Years and Weight*/
1008  label days="No. of Days"
1009  months="No. of Months"
1010  years="No. of Years"
1011  wt="Weight (in kgs)"
1012  ;
1013  run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      3 at 958:12   3 at 959:10   
NOTE: There were 19 observations read from the data set WORK.TASK2.
NOTE: The data set WORK.TASK3 has 19 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1014  
1015  /*----------------------------------------Task4-------------------------------------*/
1016  /*DECODE DATA */
1017  data output.sl;
1018  set task3;
1019  if upcase(sex)in ('M','MALE') then sex='Male';
1020  else if upcase(sex) in ('F','FEMALE') then sex='Female';
1021  run;

NOTE: There were 19 observations read from the data set WORK.TASK3.
NOTE: The data set OUTPUT.SL has 19 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1022  /*Closing log file*/
1023  proc printto;
1024  run;

